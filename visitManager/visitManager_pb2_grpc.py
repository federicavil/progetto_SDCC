# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import visitManager_pb2 as visitManager__pb2


class ManageVisitStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddNewVisit = channel.unary_unary(
                '/ManageVisit/AddNewVisit',
                request_serializer=visitManager__pb2.InputVisit.SerializeToString,
                response_deserializer=visitManager__pb2.Return.FromString,
                )
        self.GetAllVisits = channel.unary_unary(
                '/ManageVisit/GetAllVisits',
                request_serializer=visitManager__pb2.User.SerializeToString,
                response_deserializer=visitManager__pb2.Visits.FromString,
                )
        self.GetVisitByID = channel.unary_unary(
                '/ManageVisit/GetVisitByID',
                request_serializer=visitManager__pb2.ID_Visit.SerializeToString,
                response_deserializer=visitManager__pb2.Visit.FromString,
                )
        self.InviteUserToVisit = channel.unary_unary(
                '/ManageVisit/InviteUserToVisit',
                request_serializer=visitManager__pb2.Invite.SerializeToString,
                response_deserializer=visitManager__pb2.Return.FromString,
                )
        self.AcceptOrRefuseInvite = channel.unary_unary(
                '/ManageVisit/AcceptOrRefuseInvite',
                request_serializer=visitManager__pb2.InviteResponse.SerializeToString,
                response_deserializer=visitManager__pb2.Return.FromString,
                )


class ManageVisitServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AddNewVisit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllVisits(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVisitByID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InviteUserToVisit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AcceptOrRefuseInvite(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ManageVisitServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddNewVisit': grpc.unary_unary_rpc_method_handler(
                    servicer.AddNewVisit,
                    request_deserializer=visitManager__pb2.InputVisit.FromString,
                    response_serializer=visitManager__pb2.Return.SerializeToString,
            ),
            'GetAllVisits': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllVisits,
                    request_deserializer=visitManager__pb2.User.FromString,
                    response_serializer=visitManager__pb2.Visits.SerializeToString,
            ),
            'GetVisitByID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVisitByID,
                    request_deserializer=visitManager__pb2.ID_Visit.FromString,
                    response_serializer=visitManager__pb2.Visit.SerializeToString,
            ),
            'InviteUserToVisit': grpc.unary_unary_rpc_method_handler(
                    servicer.InviteUserToVisit,
                    request_deserializer=visitManager__pb2.Invite.FromString,
                    response_serializer=visitManager__pb2.Return.SerializeToString,
            ),
            'AcceptOrRefuseInvite': grpc.unary_unary_rpc_method_handler(
                    servicer.AcceptOrRefuseInvite,
                    request_deserializer=visitManager__pb2.InviteResponse.FromString,
                    response_serializer=visitManager__pb2.Return.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ManageVisit', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ManageVisit(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AddNewVisit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ManageVisit/AddNewVisit',
            visitManager__pb2.InputVisit.SerializeToString,
            visitManager__pb2.Return.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllVisits(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ManageVisit/GetAllVisits',
            visitManager__pb2.User.SerializeToString,
            visitManager__pb2.Visits.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVisitByID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ManageVisit/GetVisitByID',
            visitManager__pb2.ID_Visit.SerializeToString,
            visitManager__pb2.Visit.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InviteUserToVisit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ManageVisit/InviteUserToVisit',
            visitManager__pb2.Invite.SerializeToString,
            visitManager__pb2.Return.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AcceptOrRefuseInvite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ManageVisit/AcceptOrRefuseInvite',
            visitManager__pb2.InviteResponse.SerializeToString,
            visitManager__pb2.Return.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
